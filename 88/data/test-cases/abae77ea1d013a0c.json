{
  "uid" : "abae77ea1d013a0c",
  "name" : "test_contracts[input_data2]",
  "fullName" : "tests.openzeppelin.test_openzeppelin#test_contracts",
  "historyId" : "511db05aabd7a5a03889d11b24ff50d1",
  "time" : {
    "start" : 1631820233758,
    "stop" : 1631820233758,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/neon-compatibility/neon-compatibility/OpenZeppelin/source/test/utils/Strings.sol'",
  "statusTrace" : "input_data = InputData(test_file='access/AccessControlEnumerable.test.js', test_files=['access/AccessControlEnumerable.test.js', 'a...rospection/ERC165.sol'], contracts=['mocks/AccessControlEnumerableMock.sol'], migration_script='2_deploy_contracts.js')\n\n    @pytest.mark.parametrize(\"input_data\", INPUT_DATA)\n    def test_contracts(input_data: InputData):\n        # print(input_data)\n>       copy_files(input_data)\n\ntests/openzeppelin/test_openzeppelin.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/openzeppelin/test_openzeppelin.py:80: in copy_files\n    [\ntests/openzeppelin/test_openzeppelin.py:81: in <listcomp>\n    copy(get_source_test_path() + x,\n/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/shutil.py:418: in copy\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsrc = '/home/runner/work/neon-compatibility/neon-compatibility/OpenZeppelin/source/test/utils/Strings.sol'\ndst = '/home/runner/work/neon-compatibility/neon-compatibility/OpenZeppelin/test/utils/Strings.sol'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc, open(dst, 'wb') as fdst:\nE           FileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/neon-compatibility/neon-compatibility/OpenZeppelin/source/test/utils/Strings.sol'\n\n/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/shutil.py:264: FileNotFoundError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "prepare_truffle_config",
    "time" : {
      "start" : 1631820233747,
      "stop" : 1631820233757,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "prepare_truffle_config::0",
    "time" : {
      "start" : 1631820233824,
      "stop" : 1631820233824,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests.openzeppelin"
  }, {
    "name" : "suite",
    "value" : "test_openzeppelin"
  }, {
    "name" : "host",
    "value" : "fv-az81-756"
  }, {
    "name" : "thread",
    "value" : "4197-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.openzeppelin.test_openzeppelin"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "input_data",
    "value" : "InputData(test_file='access/AccessControlEnumerable.test.js', test_files=['access/AccessControlEnumerable.test.js', 'access/AccessControl.behavior.js', 'utils/Strings.sol', 'utils/introspection/ERC165.sol'], contracts=['mocks/AccessControlEnumerableMock.sol'], migration_script='2_deploy_contracts.js')"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "5f7643e5d61f225",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/87//#testresult/5f7643e5d61f225",
        "status" : "broken",
        "statusDetails" : "FileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/neon-compatibility/neon-compatibility/OpenZeppelin/source/test/utils/Strings.sol'",
        "time" : {
          "start" : 1631819908521,
          "stop" : 1631819908522,
          "duration" : 1
        }
      }, {
        "uid" : "bfe40a0b349c4e60",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/86//#testresult/bfe40a0b349c4e60",
        "status" : "passed",
        "time" : {
          "start" : 1631819417837,
          "stop" : 1631819425874,
          "duration" : 8037
        }
      }, {
        "uid" : "95ee0d1de198e5f9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/85//#testresult/95ee0d1de198e5f9",
        "status" : "passed",
        "time" : {
          "start" : 1631819134652,
          "stop" : 1631819144230,
          "duration" : 9578
        }
      }, {
        "uid" : "f99edf507b8fd8ce",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/84//#testresult/f99edf507b8fd8ce",
        "status" : "broken",
        "statusDetails" : "FileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/neon-compatibility/neon-compatibility/OpenZeppelin/source/test/access/IAccessControlEnumerable.test.js'",
        "time" : {
          "start" : 1631818559312,
          "stop" : 1631818559312,
          "duration" : 0
        }
      }, {
        "uid" : "1685647084eb04ad",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/83//#testresult/1685647084eb04ad",
        "status" : "broken",
        "statusDetails" : "FileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/neon-compatibility/neon-compatibility/OpenZeppelin/source/test/access/IAccessControlEnumerable.test.js'",
        "time" : {
          "start" : 1631818208267,
          "stop" : 1631818208267,
          "duration" : 0
        }
      }, {
        "uid" : "b38596a8354eba6b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/82//#testresult/b38596a8354eba6b",
        "status" : "broken",
        "statusDetails" : "FileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/neon-compatibility/neon-compatibility/OpenZeppelin/source/test/access/IAccessControlEnumerable.test.js'",
        "time" : {
          "start" : 1631817263701,
          "stop" : 1631817263701,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "abae77ea1d013a0c.json",
  "parameterValues" : [ "InputData(test_file='access/AccessControlEnumerable.test.js', test_files=['access/AccessControlEnumerable.test.js', 'access/AccessControl.behavior.js', 'utils/Strings.sol', 'utils/introspection/ERC165.sol'], contracts=['mocks/AccessControlEnumerableMock.sol'], migration_script='2_deploy_contracts.js')" ]
}