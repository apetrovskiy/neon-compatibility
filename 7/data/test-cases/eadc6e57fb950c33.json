{
  "uid" : "eadc6e57fb950c33",
  "name" : "accept signed delegation",
  "fullName" : "Contract: ERC20Votes set delegation with signature.accept signed delegation",
  "historyId" : "9fc8053fba9ab80325254e304089ab9b",
  "time" : {
    "start" : 1636518186344,
    "stop" : 1636518198975,
    "duration" : 12631
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Transaction: 0x4bd56ff3408b3e25abd75f8d3996b0de7e57ae96509bacf6500a9cb32ff6f8ee exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
  "statusTrace" : "StatusError: Transaction: 0x4bd56ff3408b3e25abd75f8d3996b0de7e57ae96509bacf6500a9cb32ff6f8ee exited with an error (status 0) after consuming all gas.\n                    at Context.<anonymous> (test/token/ERC20/extensions/ERC20Votes.test.js:161:46)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: ERC20Votes set delegation with signature"
  }, {
    "name" : "testClass",
    "value" : "Contract: ERC20Votes set delegation with signature"
  }, {
    "name" : "testMethod",
    "value" : "accept signed delegation"
  }, {
    "name" : "package",
    "value" : "Contract: ERC20Votes set delegation with signature"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 8,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "be0ea2fa3bef8464",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/6//#testresult/be0ea2fa3bef8464",
        "status" : "broken",
        "statusDetails" : "Transaction: 0x291da571dce5af5dd52245bf0e2419bda90c4d5d70ab66e958a88b32d21853a7 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1636495590218,
          "stop" : 1636495607289,
          "duration" : 17071
        }
      }, {
        "uid" : "eeef315650d4cb00",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/5//#testresult/eeef315650d4cb00",
        "status" : "broken",
        "statusDetails" : "Transaction: 0xe9fb3f3abbf32e1c510235eebf9b502fdfb75d0b86deb6e90b0d525d38677cee exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1636478520107,
          "stop" : 1636478533461,
          "duration" : 13354
        }
      }, {
        "uid" : "c5887f1d6037186c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/4//#testresult/c5887f1d6037186c",
        "status" : "broken",
        "statusDetails" : "Transaction: 0x4b2d30d0d458b79206076ba5c6e23243a49f531cd11fb2303b4d99bb68a80951 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1636421625613,
          "stop" : 1636421638836,
          "duration" : 13223
        }
      }, {
        "uid" : "6842fd52288fa7be",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/3//#testresult/6842fd52288fa7be",
        "status" : "broken",
        "statusDetails" : "Returned error: Transaction simulation failed: Error processing Instruction 1: insufficient account keys for instruction",
        "time" : {
          "start" : 1636404820846,
          "stop" : 1636404834923,
          "duration" : 14077
        }
      }, {
        "uid" : "c336054f48ee2ed1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/25//#testresult/c336054f48ee2ed1",
        "status" : "broken",
        "statusDetails" : "Transaction: 0xb6ff42a3c725038a1208f2e82899b74636cd6880440933322bbac1bba8cea3cc exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1636072651828,
          "stop" : 1636072667568,
          "duration" : 15740
        }
      }, {
        "uid" : "2f6bdb068dfc3492",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/24//#testresult/2f6bdb068dfc3492",
        "status" : "broken",
        "statusDetails" : "Returned error: Transaction simulation failed: Error processing Instruction 1: insufficient account keys for instruction",
        "time" : {
          "start" : 1636043675831,
          "stop" : 1636043684745,
          "duration" : 8914
        }
      }, {
        "uid" : "7ed392e344b6e053",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/23//#testresult/7ed392e344b6e053",
        "status" : "broken",
        "statusDetails" : "Transaction: 0x52e7a0c4ba936d136f7143c7b30c4b445af911ce444d273deb6026cce8fe5def exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1636023371069,
          "stop" : 1636023386222,
          "duration" : 15153
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "eadc6e57fb950c33.json",
  "parameterValues" : [ ]
}