{
  "uid" : "41ab8d2f0898ef8f",
  "name" : "rejects bad delegatee",
  "fullName" : "Contract: ERC20Votes set delegation with signature.rejects bad delegatee",
  "historyId" : "d39d65107687c5b7c752c1e0f40559ab",
  "time" : {
    "start" : 1636518211942,
    "stop" : 1636518224379,
    "duration" : 12437
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Transaction: 0x9eef3d9197a585f76aca582de4b6206e316db80e311950fc6a04db2a855c2ec2 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
  "statusTrace" : "StatusError: Transaction: 0x9eef3d9197a585f76aca582de4b6206e316db80e311950fc6a04db2a855c2ec2 exited with an error (status 0) after consuming all gas.\n                    at Context.<anonymous> (test/token/ERC20/extensions/ERC20Votes.test.js:209:43)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: ERC20Votes set delegation with signature"
  }, {
    "name" : "testClass",
    "value" : "Contract: ERC20Votes set delegation with signature"
  }, {
    "name" : "testMethod",
    "value" : "rejects bad delegatee"
  }, {
    "name" : "package",
    "value" : "Contract: ERC20Votes set delegation with signature"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "fcbb6988f1e1c3f6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/5//#testresult/fcbb6988f1e1c3f6",
        "status" : "broken",
        "statusDetails" : "Transaction: 0x4f763f8fcca8698fe4b04fd2ff9c150191a90a75149dde1e0596057cc2aac389 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1636478543068,
          "stop" : 1636478554920,
          "duration" : 11852
        }
      }, {
        "uid" : "51190c2f66e211c0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/4//#testresult/51190c2f66e211c0",
        "status" : "broken",
        "statusDetails" : "Transaction: 0xc16b748eb7e023b122fcf8c98dc9088cd6aaea0e57b9aa8678654713c5513e42 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1636421650080,
          "stop" : 1636421663676,
          "duration" : 13596
        }
      }, {
        "uid" : "fbdf63f76e9e1d08",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/25//#testresult/fbdf63f76e9e1d08",
        "status" : "broken",
        "statusDetails" : "Returned error: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x1",
        "time" : {
          "start" : 1636072682149,
          "stop" : 1636072696980,
          "duration" : 14831
        }
      }, {
        "uid" : "4e20ab91ce83cac5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/23//#testresult/4e20ab91ce83cac5",
        "status" : "broken",
        "statusDetails" : "Transaction: 0xcae9a1f0a3da77c8f5387ea68b5c18f6bdf9243b4e9c5887c06e7b3fccf6cf98 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1636023401271,
          "stop" : 1636023452767,
          "duration" : 51496
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "41ab8d2f0898ef8f.json",
  "parameterValues" : [ ]
}