{
  "uid" : "4c3b0dcf931aa4a5",
  "name" : "accept signed delegation",
  "fullName" : "Contract: ERC20VotesComp set delegation with signature.accept signed delegation",
  "historyId" : "80c9bff2df3b98e91fbbec6e09fc859c",
  "time" : {
    "start" : 1636043855762,
    "stop" : 1636043887008,
    "duration" : 31246
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Transaction: 0x9a2c2932f17feebb49c8cded705cbedfe7d5e1786a302ca825f93fc9d769cb5b exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
  "statusTrace" : "StatusError: Transaction: 0x9a2c2932f17feebb49c8cded705cbedfe7d5e1786a302ca825f93fc9d769cb5b exited with an error (status 0) after consuming all gas.\n                    at Context.<anonymous> (test/token/ERC20/extensions/ERC20VotesComp.test.js:161:46)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: ERC20VotesComp set delegation with signature"
  }, {
    "name" : "testClass",
    "value" : "Contract: ERC20VotesComp set delegation with signature"
  }, {
    "name" : "testMethod",
    "value" : "accept signed delegation"
  }, {
    "name" : "package",
    "value" : "Contract: ERC20VotesComp set delegation with signature"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "1b887de168ba49ca",
      "status" : "broken",
      "statusDetails" : "Transaction: 0x1700fe730b57d00f3adfd895c68ea54e6be627f284e773a10fc3e666eb16d475 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
      "time" : {
        "start" : 1636043815067,
        "stop" : 1636043841614,
        "duration" : 26547
      }
    }, {
      "uid" : "22970ac75afdc878",
      "status" : "broken",
      "statusDetails" : "Returned error: Transaction simulation failed: Error processing Instruction 0: invalid instruction data",
      "time" : {
        "start" : 1636042939673,
        "stop" : 1636042943100,
        "duration" : 3427
      }
    }, {
      "uid" : "3d60196eebb6e2e8",
      "status" : "broken",
      "statusDetails" : "Transaction: 0xf4087aeed692df75043ada53e99c5c60d08319d843c5e92828c09099bc8367eb exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
      "time" : {
        "start" : 1636036572613,
        "stop" : 1636036603561,
        "duration" : 30948
      }
    }, {
      "uid" : "1bf6d56788cb6640",
      "status" : "broken",
      "statusDetails" : "Transaction: 0xe3cb3ef9c66f04a06519a0a8ce0dc7fe322c4f6c9d16b89f126afdf32d0b4892 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
      "time" : {
        "start" : 1636035839161,
        "stop" : 1636035873537,
        "duration" : 34376
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "76d2094e22421815",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/23//#testresult/76d2094e22421815",
        "status" : "broken",
        "statusDetails" : "Failed to check for transaction receipt:\n                {\n                  \"name\": \"HardhatError\",\n                  \"errorDescriptor\": {\n                    \"number\": 110,\n                    \"message\": \"Invalid JSON-RPC response received: %response%\",\n                    \"title\": \"Invalid JSON-RPC response\",\n                    \"description\": \"One of your JSON-RPC requests received an invalid response. \\n\\nPlease make sure your node is running, and check your internet connection and networks config.\",\n                    \"shouldBeReported\": false\n                  },\n                  \"number\": 110,\n                  \"messageArguments\": {\n                    \"response\": \"<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n\"\n                  },\n                  \"_isHardhatError\": true\n                }",
        "time" : {
          "start" : 1636020667911,
          "stop" : 1636020684241,
          "duration" : 16330
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4c3b0dcf931aa4a5.json",
  "parameterValues" : [ ]
}