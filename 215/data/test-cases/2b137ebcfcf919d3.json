{
  "uid" : "2b137ebcfcf919d3",
  "name" : "test_insufficient_balance",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_insufficient_balance",
  "historyId" : "02f6dcce7a5f38efb9b84065f779b5a9",
  "time" : {
    "start" : 1643425784192,
    "stop" : 1643425784642,
    "duration" : 450
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f5444579670>\ntoken = <Token Contract '0x8aC6382Da8879fb6A56aDBbDDA9a539Ee4e927C1'>\n\n    def test_insufficient_balance(accounts, token):\n        balance = token.balanceOf(accounts[0])\n    \n        with brownie.reverts():\n>           token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transfer.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/brownie/token/tests/test_transfer.py:72: in test_insufficient_balance\n    token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1643425731579,
      "stop" : 1643425731579,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1643425732861,
      "stop" : 1643425745626,
      "duration" : 12765
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1643425748465,
      "stop" : 1643425748466,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1643425748466,
      "stop" : 1643425748734,
      "duration" : 268
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1643425767792,
      "stop" : 1643425770208,
      "duration" : 2416
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1643425991184,
      "stop" : 1643425991184,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az296-950"
  }, {
    "name" : "thread",
    "value" : "4754-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 38,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 38
      },
      "items" : [ {
        "uid" : "8cbf14940a31aadc",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/213//#testresult/8cbf14940a31aadc",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1643339448737,
          "stop" : 1643339449302,
          "duration" : 565
        }
      }, {
        "uid" : "676bde8e12761027",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/210//#testresult/676bde8e12761027",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1643242504859,
          "stop" : 1643242505406,
          "duration" : 547
        }
      }, {
        "uid" : "4f282fed911d6968",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/209//#testresult/4f282fed911d6968",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1643166519336,
          "stop" : 1643166520070,
          "duration" : 734
        }
      }, {
        "uid" : "9f4e933c48a65b5c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/198//#testresult/9f4e933c48a65b5c",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642723992550,
          "stop" : 1642723993096,
          "duration" : 546
        }
      }, {
        "uid" : "66fc0dcdfe81a35b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/197//#testresult/66fc0dcdfe81a35b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642648119616,
          "stop" : 1642648119955,
          "duration" : 339
        }
      }, {
        "uid" : "32368025942d8ca1",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/194//#testresult/32368025942d8ca1",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642551283821,
          "stop" : 1642551284362,
          "duration" : 541
        }
      }, {
        "uid" : "f7f624176b0aff9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/195//#testresult/f7f624176b0aff9",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642561774214,
          "stop" : 1642561774775,
          "duration" : 561
        }
      }, {
        "uid" : "843002d2d2c1b027",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/192//#testresult/843002d2d2c1b027",
        "status" : "broken",
        "statusDetails" : "ValueError: there is no unique or exclusion constraint matching the ON CONFLICT specification",
        "time" : {
          "start" : 1642464827044,
          "stop" : 1642464827044,
          "duration" : 0
        }
      }, {
        "uid" : "25e453543ac5da92",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/190//#testresult/25e453543ac5da92",
        "status" : "broken",
        "statusDetails" : "web3.exceptions.BlockNotFound: Block with id: 'latest' not found.",
        "time" : {
          "start" : 1642378417355,
          "stop" : 1642378417355,
          "duration" : 0
        }
      }, {
        "uid" : "385eb2a2bd483be4",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/188//#testresult/385eb2a2bd483be4",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642292089132,
          "stop" : 1642292089478,
          "duration" : 346
        }
      }, {
        "uid" : "a143907cb060bc7f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/187//#testresult/a143907cb060bc7f",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642216217584,
          "stop" : 1642216217930,
          "duration" : 346
        }
      }, {
        "uid" : "2e0c0eed763b38b7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/184//#testresult/2e0c0eed763b38b7",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642119302267,
          "stop" : 1642119302640,
          "duration" : 373
        }
      }, {
        "uid" : "1000c9ab8a9d913e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/182//#testresult/1000c9ab8a9d913e",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642032949910,
          "stop" : 1642032950312,
          "duration" : 402
        }
      }, {
        "uid" : "605d4fa1a509e5b9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/181//#testresult/605d4fa1a509e5b9",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641957533198,
          "stop" : 1641957533198,
          "duration" : 0
        }
      }, {
        "uid" : "e05272c4d2d99350",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/179//#testresult/e05272c4d2d99350",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641870612789,
          "stop" : 1641870613274,
          "duration" : 485
        }
      }, {
        "uid" : "408e8aaee73c93e8",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/177//#testresult/408e8aaee73c93e8",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641784240063,
          "stop" : 1641784240446,
          "duration" : 383
        }
      }, {
        "uid" : "c677ac7b17a7ca03",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/174//#testresult/c677ac7b17a7ca03",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641687357190,
          "stop" : 1641687357590,
          "duration" : 400
        }
      }, {
        "uid" : "48d73f06f6b01c50",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/172//#testresult/48d73f06f6b01c50",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641600964517,
          "stop" : 1641600965114,
          "duration" : 597
        }
      }, {
        "uid" : "fde59fd8d27ee04b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/170//#testresult/fde59fd8d27ee04b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641514481304,
          "stop" : 1641514481712,
          "duration" : 408
        }
      }, {
        "uid" : "7e4cb5840c9efc58",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/168//#testresult/7e4cb5840c9efc58",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641428133916,
          "stop" : 1641428134500,
          "duration" : 584
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2b137ebcfcf919d3.json",
  "parameterValues" : [ ]
}