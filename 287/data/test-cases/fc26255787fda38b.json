{
  "uid" : "fc26255787fda38b",
  "name" : "test_brownie_deploy",
  "fullName" : "tests.brownie.test_brownie#test_brownie_deploy",
  "historyId" : "6e83a925951bfd8b9c39b6ea82974dc9",
  "time" : {
    "start" : 1646536172632,
    "stop" : 1646536173106,
    "duration" : 474
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: http://proxy.night.stand.neontest.xyz/solana",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\n\n    def test_brownie_deploy(brownie_project):\n>       deployed_contract = brownie_project.Token.deploy(\n            \"Test deploy\", \"TST\", 10, 10000000, {\"from\": accounts[0]}\n        )\n\ntests/brownie/test_brownie.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:718: in _make_transaction\n    gas_price, gas_strategy, gas_iter = self._gas_price(gas_price)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:454: in _gas_price\n    return web3.eth.generate_gas_price(), None, None\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/eth.py:846: in generate_gas_price\n    return self._generate_gas_price(transaction_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/eth.py:155: in _generate_gas_price\n    return self.gasPriceStrategy(self.web3, transaction_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/gas_strategies/rpc.py:20: in rpc_gas_price_strategy\n    return web3.manager.request_blocking(RPC.eth_gasPrice, [])\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:186: in request_blocking\n    response = self._make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:147: in _make_request\n    return request_func(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py:90: in middleware\n    return make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py:33: in middleware\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py:40: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py:105: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py:88: in make_request\n    raw_response = make_post_request(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py:49: in make_post_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: http://proxy.night.stand.neontest.xyz/solana\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py:953: HTTPError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1646536153677,
      "stop" : 1646536153677,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1646536154576,
      "stop" : 1646536172630,
      "duration" : 18054
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: http://proxy.night.stand.neontest.xyz/solana",
    "statusTrace" : "brownie_project = <Project 'TokenProject'>\n\n    def test_brownie_deploy(brownie_project):\n>       deployed_contract = brownie_project.Token.deploy(\n            \"Test deploy\", \"TST\", 10, 10000000, {\"from\": accounts[0]}\n        )\n\ntests/brownie/test_brownie.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:718: in _make_transaction\n    gas_price, gas_strategy, gas_iter = self._gas_price(gas_price)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:454: in _gas_price\n    return web3.eth.generate_gas_price(), None, None\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/eth.py:846: in generate_gas_price\n    return self._generate_gas_price(transaction_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/eth.py:155: in _generate_gas_price\n    return self.gasPriceStrategy(self.web3, transaction_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/gas_strategies/rpc.py:20: in rpc_gas_price_strategy\n    return web3.manager.request_blocking(RPC.eth_gasPrice, [])\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:186: in request_blocking\n    response = self._make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:147: in _make_request\n    return request_func(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py:90: in middleware\n    return make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py:33: in middleware\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py:40: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py:105: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py:88: in make_request\n    raw_response = make_post_request(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py:49: in make_post_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: http://proxy.night.stand.neontest.xyz/solana\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py:953: HTTPError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2459d0cc4e237416",
      "name" : "log",
      "source" : "2459d0cc4e237416.txt",
      "type" : "text/plain",
      "size" : 287
    }, {
      "uid" : "93b6638760c1fcc4",
      "name" : "stdout",
      "source" : "93b6638760c1fcc4.txt",
      "type" : "text/plain",
      "size" : 241
    }, {
      "uid" : "ace588e0b62f9c54",
      "name" : "stderr",
      "source" : "ace588e0b62f9c54.txt",
      "type" : "text/plain",
      "size" : 9795
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie"
  }, {
    "name" : "suite",
    "value" : "test_brownie"
  }, {
    "name" : "host",
    "value" : "fv-az190-350"
  }, {
    "name" : "thread",
    "value" : "3769-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.test_brownie"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 22,
        "skipped" : 0,
        "passed" : 51,
        "unknown" : 0,
        "total" : 73
      },
      "items" : [ {
        "uid" : "3e266f7ace5045ee",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/285//#testresult/3e266f7ace5045ee",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 206b82134c5feee484222b73ff30a17e89b74802; balance = 0; gasPrice = 574464000000; gasLimit = 6721975; fee = 3861532646400000000; value = 0; required_balance = 3861532646400000000;",
        "time" : {
          "start" : 1646449705997,
          "stop" : 1646449707176,
          "duration" : 1179
        }
      }, {
        "uid" : "4117823405f975ec",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/282//#testresult/4117823405f975ec",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account b2aaaa19d1ad1d382d322a1348ca068a8259820d; balance = 0; gasPrice = 625317000000; gasLimit = 6721975; fee = 4203365241075000000; value = 0; required_balance = 4203365241075000000;",
        "time" : {
          "start" : 1646353078710,
          "stop" : 1646353079961,
          "duration" : 1251
        }
      }, {
        "uid" : "d16ac1870f4df0ff",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/281//#testresult/d16ac1870f4df0ff",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account ca498b52145920300b23c1654f029536d41b5f6b; balance = 0; gasPrice = 650806200000; gasLimit = 6721975; fee = 4374703006245000000; value = 0; required_balance = 4374703006245000000;",
        "time" : {
          "start" : 1646277024922,
          "stop" : 1646277026358,
          "duration" : 1436
        }
      }, {
        "uid" : "9b3094f06f4d7839",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/278//#testresult/9b3094f06f4d7839",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account e59e5eb89cfa731e90c225b9dd5e9c98bf2e6d07; balance = 0; gasPrice = 645169800000; gasLimit = 6721975; fee = 4336815266355000000; value = 0; required_balance = 4336815266355000000;",
        "time" : {
          "start" : 1646180866549,
          "stop" : 1646180867560,
          "duration" : 1011
        }
      }, {
        "uid" : "7ae7c4fdf57171b7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/277//#testresult/7ae7c4fdf57171b7",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 52baa3221957e5537720d4895fd5c4047ade30fb; balance = 0; gasPrice = 637487400000; gasLimit = 6721975; fee = 4285174365615000000; value = 0; required_balance = 4285174365615000000;",
        "time" : {
          "start" : 1646104267401,
          "stop" : 1646104268899,
          "duration" : 1498
        }
      }, {
        "uid" : "c231b20b50dabb16",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/274//#testresult/c231b20b50dabb16",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 8da2cf6ad90a6fa12bdb3d473a1fd95385eba763; balance = 0; gasPrice = 565059000000; gasLimit = 6721975; fee = 3798312471525000000; value = 0; required_balance = 3798312471525000000;",
        "time" : {
          "start" : 1646007512777,
          "stop" : 1646007515094,
          "duration" : 2317
        }
      }, {
        "uid" : "7a786c9711b64106",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/272//#testresult/7a786c9711b64106",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 35ffcc6924fe492cbf9e1ac2ef693711b86d5658; balance = 0; gasPrice = 596979900000; gasLimit = 6721975; fee = 4012883963302500000; value = 0; required_balance = 4012883963302500000;",
        "time" : {
          "start" : 1645921042047,
          "stop" : 1645921043505,
          "duration" : 1458
        }
      }, {
        "uid" : "153e767a9e44c1ae",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/270//#testresult/153e767a9e44c1ae",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 9fb902bb9c70a6f69072939f5b2b43a25cfb8323; balance = 0; gasPrice = 611176500000; gasLimit = 6721975; fee = 4108313153587500000; value = 0; required_balance = 4108313153587500000;",
        "time" : {
          "start" : 1645834644408,
          "stop" : 1645834645449,
          "duration" : 1041
        }
      }, {
        "uid" : "6496c4a57c32ead4",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/268//#testresult/6496c4a57c32ead4",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 7949509f99f972807e8dbc2cd81f8b9c4e1d76ed; balance = 0; gasPrice = 398130480000; gasLimit = 6721975; fee = 2676223133298000000; value = 0; required_balance = 2676223133298000000;",
        "time" : {
          "start" : 1645748276596,
          "stop" : 1645748277415,
          "duration" : 819
        }
      }, {
        "uid" : "399707e2ce6586f4",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/266//#testresult/399707e2ce6586f4",
        "status" : "broken",
        "statusDetails" : "ValueError: Failed to estimate gas price. Try again later",
        "time" : {
          "start" : 1645661735929,
          "stop" : 1645661738030,
          "duration" : 2101
        }
      }, {
        "uid" : "726647a5ecbf3371",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/265//#testresult/726647a5ecbf3371",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 115ce197a3521432a902efe82eff99ceb0603408; balance = 0; gasPrice = 1000000000; gasLimit = 6721975; fee = 6721975000000000; value = 0; required_balance = 6721975000000000;",
        "time" : {
          "start" : 1645585727209,
          "stop" : 1645585728198,
          "duration" : 989
        }
      }, {
        "uid" : "869972ad6d26f7ab",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/263//#testresult/869972ad6d26f7ab",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account a0ae3ff6b7280ba0b0d824c654d7e6fc78967655; balance = 0; gasPrice = 1000000000; gasLimit = 6721975; fee = 6721975000000000; value = 0; required_balance = 6721975000000000;",
        "time" : {
          "start" : 1645499348077,
          "stop" : 1645499348859,
          "duration" : 782
        }
      }, {
        "uid" : "e9ecd66c0eb84cdc",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/260//#testresult/e9ecd66c0eb84cdc",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 1f3cba58f9d17ced385d60196e5e7b87dca5abf7; balance = 0; gasPrice = 1000000000; gasLimit = 6721975; fee = 6721975000000000; value = 0; required_balance = 6721975000000000;",
        "time" : {
          "start" : 1645402515908,
          "stop" : 1645402516726,
          "duration" : 818
        }
      }, {
        "uid" : "527c302ee7948669",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/258//#testresult/527c302ee7948669",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account afd62c144b8459d13c8fb26b78c9fa680b1bd19e; balance = 0; gasPrice = 1000000000; gasLimit = 6721975; fee = 6721975000000000; value = 0; required_balance = 6721975000000000;",
        "time" : {
          "start" : 1645316261939,
          "stop" : 1645316263230,
          "duration" : 1291
        }
      }, {
        "uid" : "5e39a05bcc4d5c6f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/257//#testresult/5e39a05bcc4d5c6f",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 996fa8605779170235c15a0db8cd1c7994b500a9; balance = 0; gasPrice = 1000000000; gasLimit = 6721975; fee = 6721975000000000; value = 0; required_balance = 6721975000000000;",
        "time" : {
          "start" : 1645240114081,
          "stop" : 1645240114898,
          "duration" : 817
        }
      }, {
        "uid" : "eff5f4bb1557e872",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/255//#testresult/eff5f4bb1557e872",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account 65db69edaae6a158adda718fafa7c8f80b47f9ef; balance = 0; gasPrice = 1000000000; gasLimit = 220814; fee = 220814000000000; value = 0; required_balance = 220814000000000;",
        "time" : {
          "start" : 1645153696700,
          "stop" : 1645153697962,
          "duration" : 1262
        }
      }, {
        "uid" : "d08814d52b6d17f6",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/252//#testresult/d08814d52b6d17f6",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account ef6c174cdda972fa6b88b67895b6019fbffb4d92; balance = 0; gasPrice = 1000000000; gasLimit = 220814; fee = 220814000000000; value = 0; required_balance = 220814000000000;",
        "time" : {
          "start" : 1645056818484,
          "stop" : 1645056819309,
          "duration" : 825
        }
      }, {
        "uid" : "432497914606f7b5",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/251//#testresult/432497914606f7b5",
        "status" : "broken",
        "statusDetails" : "ValueError: The account balance is less than required: Account bbf217f945b11deb71e2a6e9b8e2596cffc381dd; balance = 0; gasPrice = 1000000000; gasLimit = 220814; fee = 220814000000000; value = 0; required_balance = 220814000000000;",
        "time" : {
          "start" : 1644980964808,
          "stop" : 1644980966076,
          "duration" : 1268
        }
      }, {
        "uid" : "426cb16136f2c490",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/249//#testresult/426cb16136f2c490",
        "status" : "passed",
        "time" : {
          "start" : 1644894610939,
          "stop" : 1644894614965,
          "duration" : 4026
        }
      }, {
        "uid" : "2f2e7b055ac70e5f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/246//#testresult/2f2e7b055ac70e5f",
        "status" : "passed",
        "time" : {
          "start" : 1644797729580,
          "stop" : 1644797732171,
          "duration" : 2591
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fc26255787fda38b.json",
  "parameterValues" : [ ]
}