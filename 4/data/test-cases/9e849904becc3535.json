{
  "uid" : "9e849904becc3535",
  "name" : "rejects reused signature",
  "fullName" : "Contract: ERC20Votes set delegation with signature.rejects reused signature",
  "historyId" : "4f8195ee2606c3069c9d6f13497bd2cf",
  "time" : {
    "start" : 1635498068486,
    "stop" : 1635498090575,
    "duration" : 22089
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Transaction: 0x3b6b5a5b7dd051dc7577c2bdae70da82aeb925b684a164b127115f8e49f88877 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
  "statusTrace" : "StatusError: Transaction: 0x3b6b5a5b7dd051dc7577c2bdae70da82aeb925b684a164b127115f8e49f88877 exited with an error (status 0) after consuming all gas.\n                    at Context.<anonymous> (test/token/ERC20/extensions/ERC20Votes.test.js:191:26)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: ERC20Votes set delegation with signature"
  }, {
    "name" : "testClass",
    "value" : "Contract: ERC20Votes set delegation with signature"
  }, {
    "name" : "testMethod",
    "value" : "rejects reused signature"
  }, {
    "name" : "package",
    "value" : "Contract: ERC20Votes set delegation with signature"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "f152c4962729a63d",
      "status" : "broken",
      "statusDetails" : "Transaction: 0x2da9791e91473a9855722b20a992a32c831384760bf62281abddddc543ee72af exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
      "time" : {
        "start" : 1635497454293,
        "stop" : 1635497471023,
        "duration" : 16730
      }
    }, {
      "uid" : "6a781ab0d5ca25a7",
      "status" : "broken",
      "statusDetails" : "Transaction: 0xe23aa09de508031905863da040bb9e20b8479291d7d62ab583fa191b9166faa3 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
      "time" : {
        "start" : 1635495105228,
        "stop" : 1635495128087,
        "duration" : 22859
      }
    }, {
      "uid" : "71db000149b9a790",
      "status" : "broken",
      "statusDetails" : "Transaction: 0x64770bd94a222430c7042794522b7834a198dd51f7abfb505dc486d8b7b16b49 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
      "time" : {
        "start" : 1635489675237,
        "stop" : 1635489685904,
        "duration" : 10667
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "8f881b30eb6ba8b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/3//#testresult/8f881b30eb6ba8b",
        "status" : "broken",
        "statusDetails" : "Transaction: 0xc22a0bb0fe2d92583308c9c9259a8335445afdaaf6e949aa92f6096d2c6b9971 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1635467804874,
          "stop" : 1635467831008,
          "duration" : 26134
        }
      }, {
        "uid" : "2ab5b7e84aae5201",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/2//#testresult/2ab5b7e84aae5201",
        "status" : "broken",
        "statusDetails" : "Returned error: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x1",
        "time" : {
          "start" : 1635451699286,
          "stop" : 1635451716094,
          "duration" : 16808
        }
      }, {
        "uid" : "4fc6ae0ef2d1ac2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/3//#testresult/4fc6ae0ef2d1ac2",
        "status" : "broken",
        "statusDetails" : "Transaction: 0x9d0432a9539e3797fdb91697143c261551840c4e836394b009cd6f62bb2a7f35 exited with an error (status 0) after consuming all gas.\n                     Please check that the transaction:\n                     - satisfies all conditions set by Solidity `assert` statements.\n                     - has enough gas to execute the full transaction.\n                     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).",
        "time" : {
          "start" : 1635423563590,
          "stop" : 1635423575439,
          "duration" : 11849
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9e849904becc3535.json",
  "parameterValues" : [ ]
}