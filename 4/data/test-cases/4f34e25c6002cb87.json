{
  "uid" : "4f34e25c6002cb87",
  "name" : "reverts when downcasting 2^32 + 1 (4294967297)",
  "fullName" : "Contract: SafeCast toUint32.reverts when downcasting 2^32 + 1 (4294967297)",
  "historyId" : "d5326ccb0f455190df0cb0eb6dbca46f",
  "time" : {
    "start" : 1637688760627,
    "stop" : 1637688761055,
    "duration" : 428
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "HH110: Invalid JSON-RPC response received: <html>\n                <head><title>500 Internal Server Error</title></head>\n                <body>\n                <center><h1>500 Internal Server Error</h1></center>\n                <hr><center>nginx/1.18.0 (Ubuntu)</center>\n                </body>\n                </html>\n                ",
  "statusTrace" : "HardhatError: HH110: Invalid JSON-RPC response received: <html>\n                    at Context.<anonymous> (test/utils/math/SafeCast.test.js:9:43)\n                    at processImmediate (node:internal/timers:464:21)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "suite",
    "value" : "Contract: SafeCast toUint32"
  }, {
    "name" : "testClass",
    "value" : "Contract: SafeCast toUint32"
  }, {
    "name" : "testMethod",
    "value" : "reverts when downcasting 2^32 + 1 (4294967297)"
  }, {
    "name" : "package",
    "value" : "Contract: SafeCast toUint32"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Connection problem",
      "messageRegex" : ".*Error: ETIMEDOUT.*|.*ESOCKETTIMEDOUT.*|.*ECONNRESET.*|.*Client network socket disconnected before secure TLS connection was established.*|.*500 Internal Server Error.*nginx.*|.*Error: socket hang up.*",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "a98c031d060ac43b",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/3//#testresult/a98c031d060ac43b",
        "status" : "passed",
        "time" : {
          "start" : 1637682727670,
          "stop" : 1637682732510,
          "duration" : 4840
        }
      }, {
        "uid" : "7337eec5d676df62",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/2//#testresult/7337eec5d676df62",
        "status" : "passed",
        "time" : {
          "start" : 1637676624801,
          "stop" : 1637676629387,
          "duration" : 4586
        }
      }, {
        "uid" : "2f88594f3ce5e39f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/22//#testresult/2f88594f3ce5e39f",
        "status" : "passed",
        "time" : {
          "start" : 1637669706973,
          "stop" : 1637669711622,
          "duration" : 4649
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4f34e25c6002cb87.json",
  "parameterValues" : [ ]
}