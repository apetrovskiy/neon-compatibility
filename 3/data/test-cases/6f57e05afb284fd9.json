{
  "uid" : "6f57e05afb284fd9",
  "name" : "adds and removes multiple keys",
  "fullName" : "Contract: EnumerableMap remove.adds and removes multiple keys",
  "historyId" : "6d84602beb11c6d0717ec14b17f0f0f6",
  "time" : {
    "start" : 1637682762075,
    "stop" : 1637682792800,
    "duration" : 30725
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f437ff40190>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))",
  "statusTrace" : "Error: Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f437ff40190>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))\n                    at Context.<anonymous> (test/utils/structs/EnumerableMap.test.js:133:22)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "suite",
    "value" : "Contract: EnumerableMap remove"
  }, {
    "name" : "testClass",
    "value" : "Contract: EnumerableMap remove"
  }, {
    "name" : "testMethod",
    "value" : "adds and removes multiple keys"
  }, {
    "name" : "package",
    "value" : "Contract: EnumerableMap remove"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "a239e9b6d28ca5ec",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/2//#testresult/a239e9b6d28ca5ec",
        "status" : "broken",
        "statusDetails" : "Returned error: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1637676707311,
          "stop" : 1637676735011,
          "duration" : 27700
        }
      }, {
        "uid" : "ff551325fc7a0379",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/22//#testresult/ff551325fc7a0379",
        "status" : "passed",
        "time" : {
          "start" : 1637669733371,
          "stop" : 1637669766091,
          "duration" : 32720
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "6f57e05afb284fd9.json",
  "parameterValues" : [ ]
}