{
  "uid" : "fcddcc8b415573bf",
  "name" : "returns signer address with correct signature for arbitrary length message",
  "fullName" : "Contract: ECDSA recover with valid signature using web3.eth.sign.returns signer address with correct signature for arbitrary length message",
  "historyId" : "1b39a3b570fe2e341f1fc770b48d6f00",
  "time" : {
    "start" : 1635329948901,
    "stop" : 1635329955464,
    "duration" : 6563
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Returned error: Transaction simulation failed: Error processing Instruction 0: invalid program argument",
  "statusTrace" : "Error: Returned error: Transaction simulation failed: Error processing Instruction 0: invalid program argument\n                    at Context.<anonymous> (test/utils/cryptography/ECDSA.test.js:58:37)\n                    at processImmediate (node:internal/timers:464:21)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: ECDSA recover with valid signature using web3.eth.sign"
  }, {
    "name" : "testClass",
    "value" : "Contract: ECDSA recover with valid signature using web3.eth.sign"
  }, {
    "name" : "testMethod",
    "value" : "returns signer address with correct signature for arbitrary length message"
  }, {
    "name" : "package",
    "value" : "Contract: ECDSA recover with valid signature using web3.eth.sign"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "7b49add79b1f33ed",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/495//#testresult/7b49add79b1f33ed",
        "status" : "passed",
        "time" : {
          "start" : 1635254941316,
          "stop" : 1635254949072,
          "duration" : 7756
        }
      }, {
        "uid" : "97336493f953941",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/487//#testresult/97336493f953941",
        "status" : "passed",
        "time" : {
          "start" : 1635184634924,
          "stop" : 1635184640396,
          "duration" : 5472
        }
      }, {
        "uid" : "db9e0737ea7effd5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/481//#testresult/db9e0737ea7effd5",
        "status" : "passed",
        "time" : {
          "start" : 1635150040440,
          "stop" : 1635150040485,
          "duration" : 45
        }
      }, {
        "uid" : "8ca3c9caf9390a8e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/480//#testresult/8ca3c9caf9390a8e",
        "status" : "passed",
        "time" : {
          "start" : 1635147542908,
          "stop" : 1635147542932,
          "duration" : 24
        }
      }, {
        "uid" : "50efb7f1ce7e35fa",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/479//#testresult/50efb7f1ce7e35fa",
        "status" : "passed",
        "time" : {
          "start" : 1635146274009,
          "stop" : 1635146274052,
          "duration" : 43
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fcddcc8b415573bf.json",
  "parameterValues" : [ ]
}