{
  "uid" : "7b17f11eaa1f96eb",
  "name" : "upgrade to upgradeable implementation with call",
  "fullName" : "Contract: UUPSUpgradeable.upgrade to upgradeable implementation with call",
  "historyId" : "2c97f81fd5822fce225d4a3cdc40d2a3",
  "time" : {
    "start" : 1635506720855,
    "stop" : 1635506747484,
    "duration" : 26629
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "HH110: Invalid JSON-RPC response received: <html>\n                <head><title>500 Internal Server Error</title></head>\n                <body>\n                <center><h1>500 Internal Server Error</h1></center>\n                <hr><center>nginx/1.18.0 (Ubuntu)</center>\n                </body>\n                </html>\n                ",
  "statusTrace" : "HardhatError: HH110: Invalid JSON-RPC response received: <html>\n                    at Context.<anonymous> (test/proxy/utils/UUPSUpgradeable.test.js:30:32)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: UUPSUpgradeable"
  }, {
    "name" : "testClass",
    "value" : "Contract: UUPSUpgradeable"
  }, {
    "name" : "testMethod",
    "value" : "upgrade to upgradeable implementation with call"
  }, {
    "name" : "package",
    "value" : "Contract: UUPSUpgradeable"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Connection problem",
      "messageRegex" : ".*Error: ETIMEDOUT.*|.*ESOCKETTIMEDOUT.*|.*ECONNRESET.*|.*Client network socket disconnected before secure TLS connection was established.*|.*500 Internal Server Error.*nginx.*|.*Error: socket hang up.*",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "665d91fd5d8a175d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/4//#testresult/665d91fd5d8a175d",
        "status" : "broken",
        "statusDetails" : "Returned error: request to https://proxy.devnet.neonlabs.org/solana failed, reason: Client network socket disconnected before secure TLS connection was established",
        "time" : {
          "start" : 1635496006175,
          "stop" : 1635496027514,
          "duration" : 21339
        }
      }, {
        "uid" : "eae865ff2bca9558",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/3//#testresult/eae865ff2bca9558",
        "status" : "broken",
        "statusDetails" : "Returned error: Transaction simulation failed: Error processing Instruction 0: insufficient account keys for instruction",
        "time" : {
          "start" : 1635473458703,
          "stop" : 1635473468725,
          "duration" : 10022
        }
      }, {
        "uid" : "d4a2ca15de682b5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/2//#testresult/d4a2ca15de682b5",
        "status" : "passed",
        "time" : {
          "start" : 1635451615100,
          "stop" : 1635451650539,
          "duration" : 35439
        }
      }, {
        "uid" : "f2dac9b2bd1ff065",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/3//#testresult/f2dac9b2bd1ff065",
        "status" : "passed",
        "time" : {
          "start" : 1635421527069,
          "stop" : 1635421536095,
          "duration" : 9026
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7b17f11eaa1f96eb.json",
  "parameterValues" : [ ]
}