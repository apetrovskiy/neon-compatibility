{
  "uid" : "11b444d2968effa9",
  "name" : "reverts when trying to burn when paused",
  "fullName" : "Contract: ERC20Pausable pausable token burn.reverts when trying to burn when paused",
  "historyId" : "82affb3294245356362811a5d8ba8ca8",
  "time" : {
    "start" : 1637867964865,
    "stop" : 1637867968549,
    "duration" : 3684
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f4380194b80>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))",
  "statusTrace" : "Error: Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f4380194b80>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))\n                    at Context.<anonymous> (test/token/ERC20/extensions/ERC20Pausable.test.js:16:45)\n                    at processImmediate (node:internal/timers:464:21)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "suite",
    "value" : "Contract: ERC20Pausable pausable token burn"
  }, {
    "name" : "testClass",
    "value" : "Contract: ERC20Pausable pausable token burn"
  }, {
    "name" : "testMethod",
    "value" : "reverts when trying to burn when paused"
  }, {
    "name" : "package",
    "value" : "Contract: ERC20Pausable pausable token burn"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "b548ebc96ff7ad1a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/32//#testresult/b548ebc96ff7ad1a",
        "status" : "passed",
        "time" : {
          "start" : 1637855662897,
          "stop" : 1637855673534,
          "duration" : 10637
        }
      }, {
        "uid" : "793d25a918082505",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/5//#testresult/793d25a918082505",
        "status" : "passed",
        "time" : {
          "start" : 1637742461952,
          "stop" : 1637742471467,
          "duration" : 9515
        }
      }, {
        "uid" : "2a9ab07604325918",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/23//#testresult/2a9ab07604325918",
        "status" : "passed",
        "time" : {
          "start" : 1637700440939,
          "stop" : 1637700482182,
          "duration" : 41243
        }
      }, {
        "uid" : "94dc2beaaac4dcdd",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/22//#testresult/94dc2beaaac4dcdd",
        "status" : "passed",
        "time" : {
          "start" : 1637667916571,
          "stop" : 1637667926140,
          "duration" : 9569
        }
      }, {
        "uid" : "7956cceabec37ce8",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/16//#testresult/7956cceabec37ce8",
        "status" : "passed",
        "time" : {
          "start" : 1637334615143,
          "stop" : 1637334624462,
          "duration" : 9319
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "11b444d2968effa9.json",
  "parameterValues" : [ ]
}