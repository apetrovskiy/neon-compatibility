{
  "uid" : "c6864f23e3c7f42",
  "name" : "set",
  "fullName" : "Contract: StorageSlot bytes32 storage slot.set",
  "historyId" : "2a2fe20a8da5acf1ee0c7553b0aeca13",
  "time" : {
    "start" : 1637867964806,
    "stop" : 1637867968029,
    "duration" : 3223
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f437fcd35e0>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))",
  "statusTrace" : "Error: Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f437fcd35e0>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))\n                    at Context.<anonymous> (test/utils/StorageSlot.test.js:12:43)\n                    at processImmediate (node:internal/timers:464:21)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "suite",
    "value" : "Contract: StorageSlot bytes32 storage slot"
  }, {
    "name" : "testClass",
    "value" : "Contract: StorageSlot bytes32 storage slot"
  }, {
    "name" : "testMethod",
    "value" : "set"
  }, {
    "name" : "package",
    "value" : "Contract: StorageSlot bytes32 storage slot"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 6,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "13523906df950452",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/32//#testresult/13523906df950452",
        "status" : "passed",
        "time" : {
          "start" : 1637859323940,
          "stop" : 1637859329769,
          "duration" : 5829
        }
      }, {
        "uid" : "66215880d24ee1f5",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/23//#testresult/66215880d24ee1f5",
        "status" : "passed",
        "time" : {
          "start" : 1637704462825,
          "stop" : 1637704484183,
          "duration" : 21358
        }
      }, {
        "uid" : "b1f8206cb364d87c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/4//#testresult/b1f8206cb364d87c",
        "status" : "passed",
        "time" : {
          "start" : 1637689024511,
          "stop" : 1637689045184,
          "duration" : 20673
        }
      }, {
        "uid" : "f5d343bc6082d1dc",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/3//#testresult/f5d343bc6082d1dc",
        "status" : "passed",
        "time" : {
          "start" : 1637682878110,
          "stop" : 1637682883795,
          "duration" : 5685
        }
      }, {
        "uid" : "20bee78c0d4ea3a3",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/2//#testresult/20bee78c0d4ea3a3",
        "status" : "passed",
        "time" : {
          "start" : 1637676819299,
          "stop" : 1637676824849,
          "duration" : 5550
        }
      }, {
        "uid" : "ea3ce4b174af78bd",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/22//#testresult/ea3ce4b174af78bd",
        "status" : "passed",
        "time" : {
          "start" : 1637669909447,
          "stop" : 1637669914799,
          "duration" : 5352
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c6864f23e3c7f42.json",
  "parameterValues" : [ ]
}