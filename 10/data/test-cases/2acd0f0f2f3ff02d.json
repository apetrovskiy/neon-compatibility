{
  "uid" : "2acd0f0f2f3ff02d",
  "name" : "reverts when retrieving non-existent elements",
  "fullName" : "Contract: EnumerableSet EnumerableBytes32Set at.reverts when retrieving non-existent elements",
  "historyId" : "be288c506222ea17502500d8615564dd",
  "time" : {
    "start" : 1637867967890,
    "stop" : 1637867968487,
    "duration" : 597
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f437fd16400>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))",
  "statusTrace" : "Error: Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f437fd16400>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))\n                    at Context.<anonymous> (test/utils/structs/EnumerableSet.test.js:17:52)\n                    at processImmediate (node:internal/timers:464:21)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "suite",
    "value" : "Contract: EnumerableSet EnumerableBytes32Set at"
  }, {
    "name" : "testClass",
    "value" : "Contract: EnumerableSet EnumerableBytes32Set at"
  }, {
    "name" : "testMethod",
    "value" : "reverts when retrieving non-existent elements"
  }, {
    "name" : "package",
    "value" : "Contract: EnumerableSet EnumerableBytes32Set at"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "944ebdf6c05d7239",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/23//#testresult/944ebdf6c05d7239",
        "status" : "passed",
        "time" : {
          "start" : 1637703850709,
          "stop" : 1637703865874,
          "duration" : 15165
        }
      }, {
        "uid" : "ed5db87078871712",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/4//#testresult/ed5db87078871712",
        "status" : "passed",
        "time" : {
          "start" : 1637688583273,
          "stop" : 1637688607010,
          "duration" : 23737
        }
      }, {
        "uid" : "9871d689e68db7b9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/3//#testresult/9871d689e68db7b9",
        "status" : "passed",
        "time" : {
          "start" : 1637682732422,
          "stop" : 1637682737431,
          "duration" : 5009
        }
      }, {
        "uid" : "10cad405c2ad6824",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/2//#testresult/10cad405c2ad6824",
        "status" : "passed",
        "time" : {
          "start" : 1637676641983,
          "stop" : 1637676646228,
          "duration" : 4245
        }
      }, {
        "uid" : "6dcbe577c7202d97",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/22//#testresult/6dcbe577c7202d97",
        "status" : "passed",
        "time" : {
          "start" : 1637669707403,
          "stop" : 1637669712045,
          "duration" : 4642
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2acd0f0f2f3ff02d.json",
  "parameterValues" : [ ]
}