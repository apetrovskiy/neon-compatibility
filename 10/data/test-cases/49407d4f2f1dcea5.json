{
  "uid" : "49407d4f2f1dcea5",
  "name" : "multiplies correctly",
  "fullName" : "Contract: SignedSafeMath mul.multiplies correctly",
  "historyId" : "3eae4d00ca9bc000d384a23a1712ee62",
  "time" : {
    "start" : 1637867967943,
    "stop" : 1637867968535,
    "duration" : 592
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f4380194df0>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))",
  "statusTrace" : "Error: Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f4380194df0>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))\n                    at Context.<anonymous> (test/utils/math/SignedSafeMath.test.js:10:49)\n                    at processImmediate (node:internal/timers:464:21)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "suite",
    "value" : "Contract: SignedSafeMath mul"
  }, {
    "name" : "testClass",
    "value" : "Contract: SignedSafeMath mul"
  }, {
    "name" : "testMethod",
    "value" : "multiplies correctly"
  }, {
    "name" : "package",
    "value" : "Contract: SignedSafeMath mul"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 6,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "28572de147b35117",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/32//#testresult/28572de147b35117",
        "status" : "passed",
        "time" : {
          "start" : 1637859185372,
          "stop" : 1637859191580,
          "duration" : 6208
        }
      }, {
        "uid" : "b86d6aa57e652501",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/23//#testresult/b86d6aa57e652501",
        "status" : "passed",
        "time" : {
          "start" : 1637703849005,
          "stop" : 1637703865300,
          "duration" : 16295
        }
      }, {
        "uid" : "78b71606b70cce23",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/4//#testresult/78b71606b70cce23",
        "status" : "passed",
        "time" : {
          "start" : 1637688582978,
          "stop" : 1637688643310,
          "duration" : 60332
        }
      }, {
        "uid" : "53f5514da24b3b99",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/3//#testresult/53f5514da24b3b99",
        "status" : "passed",
        "time" : {
          "start" : 1637682727670,
          "stop" : 1637682733400,
          "duration" : 5730
        }
      }, {
        "uid" : "bac95f16f764a27c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/2//#testresult/bac95f16f764a27c",
        "status" : "passed",
        "time" : {
          "start" : 1637676639469,
          "stop" : 1637676644592,
          "duration" : 5123
        }
      }, {
        "uid" : "aa4bbfacc2770f2f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/22//#testresult/aa4bbfacc2770f2f",
        "status" : "passed",
        "time" : {
          "start" : 1637669698560,
          "stop" : 1637669704054,
          "duration" : 5494
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "49407d4f2f1dcea5.json",
  "parameterValues" : [ ]
}