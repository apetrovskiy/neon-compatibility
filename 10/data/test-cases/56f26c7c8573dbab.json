{
  "uid" : "56f26c7c8573dbab",
  "name" : "reverts when approving a non-zero allowance",
  "fullName" : "Contract: SafeERC20 with token that returns true on all calls approvals with non-zero allowance.reverts when approving a non-zero allowance",
  "historyId" : "43c6887b4a4fc668c399f8a5b53938a1",
  "time" : {
    "start" : 1637867955787,
    "stop" : 1637867968268,
    "duration" : 12481
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f437fce09a0>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))",
  "statusTrace" : "Error: Returned error: HTTPConnectionPool(host='test-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f437fce09a0>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))\n                    at Context.<anonymous> (test/token/ERC20/utils/SafeERC20.test.js:105:28)\n                    at processImmediate (node:internal/timers:464:21)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "suite",
    "value" : "Contract: SafeERC20 with token that returns true on all calls approvals with non-zero allowance"
  }, {
    "name" : "testClass",
    "value" : "Contract: SafeERC20 with token that returns true on all calls approvals with non-zero allowance"
  }, {
    "name" : "testMethod",
    "value" : "reverts when approving a non-zero allowance"
  }, {
    "name" : "package",
    "value" : "Contract: SafeERC20 with token that returns true on all calls approvals with non-zero allowance"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "27940ed79f06c55e",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/5//#testresult/27940ed79f06c55e",
        "status" : "passed",
        "time" : {
          "start" : 1637742468121,
          "stop" : 1637742478635,
          "duration" : 10514
        }
      }, {
        "uid" : "8f81da7b5318767f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/23//#testresult/8f81da7b5318767f",
        "status" : "passed",
        "time" : {
          "start" : 1637700466216,
          "stop" : 1637700504604,
          "duration" : 38388
        }
      }, {
        "uid" : "ec9db68b2f48ab2c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/22//#testresult/ec9db68b2f48ab2c",
        "status" : "passed",
        "time" : {
          "start" : 1637667925336,
          "stop" : 1637667935533,
          "duration" : 10197
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "56f26c7c8573dbab.json",
  "parameterValues" : [ ]
}