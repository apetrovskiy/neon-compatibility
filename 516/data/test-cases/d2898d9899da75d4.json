{
  "uid" : "d2898d9899da75d4",
  "name" : "reverts when retrieving non-existent elements",
  "fullName" : "Contract: EnumerableSet EnumerableUintSet at.reverts when retrieving non-existent elements",
  "historyId" : "32573e33eb333a68772138893cbd95b8",
  "time" : {
    "start" : 1635368014624,
    "stop" : 1635368025206,
    "duration" : 10582
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "Wrong kind of exception received: expected 'Returned error: invalid literal for int() with base 16: \\'\\'' to equal 'revert'",
  "statusTrace" : "AssertionError: Wrong kind of exception received: expected 'Returned error: invalid literal for int() with base 16: \\'\\'' to equal 'revert'\n                    at expectException (/Users/runner/work/neon-compatibility/neon-compatibility/node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)\n                    at runMicrotasks (<anonymous>)\n                    at runNextTicks (node:internal/process/task_queues:61:5)\n                    at processTimers (node:internal/timers:497:9)\n                    at Context.<anonymous> (test/utils/structs/EnumerableSet.behavior.js:63:7)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: EnumerableSet EnumerableUintSet at"
  }, {
    "name" : "testClass",
    "value" : "Contract: EnumerableSet EnumerableUintSet at"
  }, {
    "name" : "testMethod",
    "value" : "reverts when retrieving non-existent elements"
  }, {
    "name" : "package",
    "value" : "Contract: EnumerableSet EnumerableUintSet at"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "dd0723d0b7095dea",
      "status" : "failed",
      "statusDetails" : "Wrong kind of exception received: expected 'Returned error: invalid literal for int() with base 16: \\'\\'' to equal 'revert'",
      "time" : {
        "start" : 1635367217616,
        "stop" : 1635367242759,
        "duration" : 25143
      }
    }, {
      "uid" : "190910f99a300e81",
      "status" : "failed",
      "statusDetails" : "Wrong kind of exception received: expected 'Returned error: invalid literal for int() with base 16: \\'\\'' to equal 'revert'",
      "time" : {
        "start" : 1635366773198,
        "stop" : 1635366778256,
        "duration" : 5058
      }
    }, {
      "uid" : "de42750fc4e7f716",
      "status" : "failed",
      "statusDetails" : "Wrong kind of exception received: expected 'Returned error: invalid literal for int() with base 16: \\'\\'' to equal 'revert'",
      "time" : {
        "start" : 1635359915855,
        "stop" : 1635359920690,
        "duration" : 4835
      }
    }, {
      "uid" : "d3f4040233845d3b",
      "status" : "failed",
      "statusDetails" : "Wrong kind of exception received: expected 'Returned error: invalid literal for int() with base 16: \\'\\'' to equal 'revert'",
      "time" : {
        "start" : 1635359666949,
        "stop" : 1635359686237,
        "duration" : 19288
      }
    }, {
      "uid" : "4d315eeb9e723603",
      "status" : "failed",
      "statusDetails" : "Wrong kind of exception received: expected 'Returned error: invalid literal for int() with base 16: \\'\\'' to equal 'revert'",
      "time" : {
        "start" : 1635359275083,
        "stop" : 1635359283546,
        "duration" : 8463
      }
    }, {
      "uid" : "f913991a659c7ebc",
      "status" : "failed",
      "statusDetails" : "Wrong kind of exception received: expected 'Returned error: invalid literal for int() with base 16: \\'\\'' to equal 'revert'",
      "time" : {
        "start" : 1635357867003,
        "stop" : 1635357876245,
        "duration" : 9242
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d2898d9899da75d4.json",
  "parameterValues" : [ ]
}