{
  "uid" : "ba502e3bfd7aa8ad",
  "name" : "shouldConnectToNetwork()",
  "fullName" : "org.neonlabs.compatibility.ConnectionKtTest.shouldConnectToNetwork",
  "historyId" : "954d7a21b77cb5257173fc2ecd971b33",
  "time" : {
    "start" : 1635264755463,
    "stop" : 1635264755896,
    "duration" : 433
  },
  "description" : "Connection",
  "descriptionHtml" : "<p>Connection</p>\n",
  "status" : "failed",
  "statusMessage" : "expected: not <null>",
  "statusTrace" : "org.opentest4j.AssertionFailedError: expected: not <null>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:134)\n\tat org.junit.jupiter.api.AssertNotNull.failNull(AssertNotNull.java:47)\n\tat org.junit.jupiter.api.AssertNotNull.assertNotNull(AssertNotNull.java:36)\n\tat org.junit.jupiter.api.AssertNotNull.assertNotNull(AssertNotNull.java:31)\n\tat org.junit.jupiter.api.Assertions.assertNotNull(Assertions.java:300)\n\tat org.neonlabs.compatibility.ConnectionKtTest.shouldConnectToNetwork(ConnectionKtTest.kt:27)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:129)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:295)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "junit.platform.uniqueid",
    "value" : "[engine:junit-jupiter]/[class:org.neonlabs.compatibility.ConnectionKtTest]/[method:shouldConnectToNetwork()]"
  }, {
    "name" : "feature",
    "value" : "KEthereum"
  }, {
    "name" : "epic",
    "value" : "Kotlin frameworks"
  }, {
    "name" : "story",
    "value" : "Connection"
  }, {
    "name" : "host",
    "value" : "fv-az124-324"
  }, {
    "name" : "thread",
    "value" : "3995@fv-az124-324.ForkJoinPool-1-worker-3(17)"
  }, {
    "name" : "framework",
    "value" : "junit-platform"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "package",
    "value" : "org.neonlabs.compatibility.ConnectionKtTest"
  }, {
    "name" : "testClass",
    "value" : "org.neonlabs.compatibility.ConnectionKtTest"
  }, {
    "name" : "testMethod",
    "value" : "shouldConnectToNetwork"
  }, {
    "name" : "suite",
    "value" : "org.neonlabs.compatibility.ConnectionKtTest"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 5,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 178,
        "unknown" : 0,
        "total" : 183
      },
      "items" : [ {
        "uid" : "3c07652129a144a5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/497//#testresult/3c07652129a144a5",
        "status" : "passed",
        "time" : {
          "start" : 1635261426982,
          "stop" : 1635261427677,
          "duration" : 695
        }
      }, {
        "uid" : "9519617154b6cd5d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/495//#testresult/9519617154b6cd5d",
        "status" : "passed",
        "time" : {
          "start" : 1635242431642,
          "stop" : 1635242432046,
          "duration" : 404
        }
      }, {
        "uid" : "666d38f72a93b260",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/496//#testresult/666d38f72a93b260",
        "status" : "failed",
        "statusDetails" : "expected: not <null>",
        "time" : {
          "start" : 1635243633759,
          "stop" : 1635243634249,
          "duration" : 490
        }
      }, {
        "uid" : "9f09319301bd3e29",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/493//#testresult/9f09319301bd3e29",
        "status" : "passed",
        "time" : {
          "start" : 1635239217963,
          "stop" : 1635239218566,
          "duration" : 603
        }
      }, {
        "uid" : "fdc791174be745c8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/494//#testresult/fdc791174be745c8",
        "status" : "failed",
        "statusDetails" : "expected: not <null>",
        "time" : {
          "start" : 1635239470348,
          "stop" : 1635239470784,
          "duration" : 436
        }
      }, {
        "uid" : "165e1ce6186a512b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/492//#testresult/165e1ce6186a512b",
        "status" : "failed",
        "statusDetails" : "expected: not <null>",
        "time" : {
          "start" : 1635235770484,
          "stop" : 1635235770948,
          "duration" : 464
        }
      }, {
        "uid" : "22e6850058976dbf",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/491//#testresult/22e6850058976dbf",
        "status" : "passed",
        "time" : {
          "start" : 1635232590283,
          "stop" : 1635232590811,
          "duration" : 528
        }
      }, {
        "uid" : "bb6586d1d4eb235f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/490//#testresult/bb6586d1d4eb235f",
        "status" : "passed",
        "time" : {
          "start" : 1635226225203,
          "stop" : 1635226225802,
          "duration" : 599
        }
      }, {
        "uid" : "2748c6a0d360d885",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/489//#testresult/2748c6a0d360d885",
        "status" : "passed",
        "time" : {
          "start" : 1635226010318,
          "stop" : 1635226010787,
          "duration" : 469
        }
      }, {
        "uid" : "97ec120165e6aead",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/488//#testresult/97ec120165e6aead",
        "status" : "passed",
        "time" : {
          "start" : 1635195306442,
          "stop" : 1635195306965,
          "duration" : 523
        }
      }, {
        "uid" : "b66815e32c642a69",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/487//#testresult/b66815e32c642a69",
        "status" : "passed",
        "time" : {
          "start" : 1635170483846,
          "stop" : 1635170484127,
          "duration" : 281
        }
      }, {
        "uid" : "3156929570baf822",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/486//#testresult/3156929570baf822",
        "status" : "passed",
        "time" : {
          "start" : 1635160529666,
          "stop" : 1635160530262,
          "duration" : 596
        }
      }, {
        "uid" : "174f798b60731b2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/485//#testresult/174f798b60731b2",
        "status" : "passed",
        "time" : {
          "start" : 1635156303198,
          "stop" : 1635156303571,
          "duration" : 373
        }
      }, {
        "uid" : "735adaf51ba71e33",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/484//#testresult/735adaf51ba71e33",
        "status" : "passed",
        "time" : {
          "start" : 1635154571618,
          "stop" : 1635154572053,
          "duration" : 435
        }
      }, {
        "uid" : "f80cc59782c7377e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/483//#testresult/f80cc59782c7377e",
        "status" : "passed",
        "time" : {
          "start" : 1635153293070,
          "stop" : 1635153293828,
          "duration" : 758
        }
      }, {
        "uid" : "b384f8b39ebe1695",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/481//#testresult/b384f8b39ebe1695",
        "status" : "passed",
        "time" : {
          "start" : 1635149467260,
          "stop" : 1635149467903,
          "duration" : 643
        }
      }, {
        "uid" : "b3f39b94829dc05b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/482//#testresult/b3f39b94829dc05b",
        "status" : "passed",
        "time" : {
          "start" : 1635149705851,
          "stop" : 1635149706517,
          "duration" : 666
        }
      }, {
        "uid" : "176cd05e849748f6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/480//#testresult/176cd05e849748f6",
        "status" : "passed",
        "time" : {
          "start" : 1635147084376,
          "stop" : 1635147084945,
          "duration" : 569
        }
      }, {
        "uid" : "9fdeb3a69b5bc9dc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/479//#testresult/9fdeb3a69b5bc9dc",
        "status" : "passed",
        "time" : {
          "start" : 1635145792494,
          "stop" : 1635145792996,
          "duration" : 502
        }
      }, {
        "uid" : "5800058f50d7c2eb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/478//#testresult/5800058f50d7c2eb",
        "status" : "passed",
        "time" : {
          "start" : 1635145349154,
          "stop" : 1635145349581,
          "duration" : 427
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ba502e3bfd7aa8ad.json",
  "parameterValues" : [ ]
}