{
  "uid" : "c9e1742ff3ff68a",
  "name" : "shouldConnectToNetwork()",
  "fullName" : "org.neonlabs.compatibility.ConnectionKtTest.shouldConnectToNetwork",
  "historyId" : "954d7a21b77cb5257173fc2ecd971b33",
  "time" : {
    "start" : 1634069132690,
    "stop" : 1634069133122,
    "duration" : 432
  },
  "description" : "Connection",
  "descriptionHtml" : "<p>Connection</p>\n",
  "status" : "failed",
  "statusMessage" : "expected: not <null>",
  "statusTrace" : "org.opentest4j.AssertionFailedError: expected: not <null>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:134)\n\tat org.junit.jupiter.api.AssertNotNull.failNull(AssertNotNull.java:47)\n\tat org.junit.jupiter.api.AssertNotNull.assertNotNull(AssertNotNull.java:36)\n\tat org.junit.jupiter.api.AssertNotNull.assertNotNull(AssertNotNull.java:31)\n\tat org.junit.jupiter.api.Assertions.assertNotNull(Assertions.java:300)\n\tat org.neonlabs.compatibility.ConnectionKtTest.shouldConnectToNetwork(ConnectionKtTest.kt:27)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:129)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:295)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "junit.platform.uniqueid",
    "value" : "[engine:junit-jupiter]/[class:org.neonlabs.compatibility.ConnectionKtTest]/[method:shouldConnectToNetwork()]"
  }, {
    "name" : "feature",
    "value" : "KEthereum"
  }, {
    "name" : "epic",
    "value" : "Kotlin frameworks"
  }, {
    "name" : "story",
    "value" : "Connection"
  }, {
    "name" : "host",
    "value" : "fv-az135-348"
  }, {
    "name" : "thread",
    "value" : "3298@fv-az135-348.ForkJoinPool-1-worker-3(17)"
  }, {
    "name" : "framework",
    "value" : "junit-platform"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "package",
    "value" : "org.neonlabs.compatibility.ConnectionKtTest"
  }, {
    "name" : "testClass",
    "value" : "org.neonlabs.compatibility.ConnectionKtTest"
  }, {
    "name" : "testMethod",
    "value" : "shouldConnectToNetwork"
  }, {
    "name" : "suite",
    "value" : "org.neonlabs.compatibility.ConnectionKtTest"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 78,
        "unknown" : 0,
        "total" : 79
      },
      "items" : [ {
        "uid" : "960be4e71861d8f8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/391//#testresult/960be4e71861d8f8",
        "status" : "passed",
        "time" : {
          "start" : 1634069135956,
          "stop" : 1634069136462,
          "duration" : 506
        }
      }, {
        "uid" : "2e7f20ad1312df62",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/390//#testresult/2e7f20ad1312df62",
        "status" : "passed",
        "time" : {
          "start" : 1634066381624,
          "stop" : 1634066382088,
          "duration" : 464
        }
      }, {
        "uid" : "1aaf7dd3943f5d87",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/389//#testresult/1aaf7dd3943f5d87",
        "status" : "passed",
        "time" : {
          "start" : 1634064311333,
          "stop" : 1634064311849,
          "duration" : 516
        }
      }, {
        "uid" : "75e0a06a33dc06a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/388//#testresult/75e0a06a33dc06a",
        "status" : "passed",
        "time" : {
          "start" : 1634063343643,
          "stop" : 1634063344348,
          "duration" : 705
        }
      }, {
        "uid" : "8136db363d6e7130",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/387//#testresult/8136db363d6e7130",
        "status" : "passed",
        "time" : {
          "start" : 1634062565569,
          "stop" : 1634062565983,
          "duration" : 414
        }
      }, {
        "uid" : "32893b9e24ea2ab4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/386//#testresult/32893b9e24ea2ab4",
        "status" : "passed",
        "time" : {
          "start" : 1634061417462,
          "stop" : 1634061417902,
          "duration" : 440
        }
      }, {
        "uid" : "a69d7b638d8ffe05",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/385//#testresult/a69d7b638d8ffe05",
        "status" : "passed",
        "time" : {
          "start" : 1634061429482,
          "stop" : 1634061429953,
          "duration" : 471
        }
      }, {
        "uid" : "11a7d7e4e9dce916",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/384//#testresult/11a7d7e4e9dce916",
        "status" : "passed",
        "time" : {
          "start" : 1634060586459,
          "stop" : 1634060586861,
          "duration" : 402
        }
      }, {
        "uid" : "5833dc873121374d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/383//#testresult/5833dc873121374d",
        "status" : "passed",
        "time" : {
          "start" : 1634059510472,
          "stop" : 1634059510923,
          "duration" : 451
        }
      }, {
        "uid" : "c9575805b252f940",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/382//#testresult/c9575805b252f940",
        "status" : "passed",
        "time" : {
          "start" : 1634056981486,
          "stop" : 1634056982113,
          "duration" : 627
        }
      }, {
        "uid" : "5da151dad6d45e98",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/381//#testresult/5da151dad6d45e98",
        "status" : "passed",
        "time" : {
          "start" : 1634055813508,
          "stop" : 1634055814020,
          "duration" : 512
        }
      }, {
        "uid" : "c3880d8cab9a8153",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/380//#testresult/c3880d8cab9a8153",
        "status" : "passed",
        "time" : {
          "start" : 1634052463751,
          "stop" : 1634052464196,
          "duration" : 445
        }
      }, {
        "uid" : "46ccf70c61f9c49f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/379//#testresult/46ccf70c61f9c49f",
        "status" : "passed",
        "time" : {
          "start" : 1634047197376,
          "stop" : 1634047197978,
          "duration" : 602
        }
      }, {
        "uid" : "9e67f8abf027c2b6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/378//#testresult/9e67f8abf027c2b6",
        "status" : "passed",
        "time" : {
          "start" : 1634046296443,
          "stop" : 1634046297050,
          "duration" : 607
        }
      }, {
        "uid" : "100539401b286309",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/377//#testresult/100539401b286309",
        "status" : "passed",
        "time" : {
          "start" : 1634045255269,
          "stop" : 1634045255736,
          "duration" : 467
        }
      }, {
        "uid" : "de49906e8c98c87f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/375//#testresult/de49906e8c98c87f",
        "status" : "passed",
        "time" : {
          "start" : 1634043634678,
          "stop" : 1634043635226,
          "duration" : 548
        }
      }, {
        "uid" : "bb384b7e5bb7d344",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/374//#testresult/bb384b7e5bb7d344",
        "status" : "passed",
        "time" : {
          "start" : 1634042212149,
          "stop" : 1634042212669,
          "duration" : 520
        }
      }, {
        "uid" : "c2fe3e426ed8195e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/373//#testresult/c2fe3e426ed8195e",
        "status" : "passed",
        "time" : {
          "start" : 1634041412351,
          "stop" : 1634041412917,
          "duration" : 566
        }
      }, {
        "uid" : "22622bec84dcaea2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/372//#testresult/22622bec84dcaea2",
        "status" : "passed",
        "time" : {
          "start" : 1634040431677,
          "stop" : 1634040432136,
          "duration" : 459
        }
      }, {
        "uid" : "e90d78e7766ce1e1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/371//#testresult/e90d78e7766ce1e1",
        "status" : "passed",
        "time" : {
          "start" : 1634036439657,
          "stop" : 1634036440238,
          "duration" : 581
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c9e1742ff3ff68a.json",
  "parameterValues" : [ ]
}