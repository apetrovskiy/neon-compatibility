{
  "uid" : "ddeac2db1127771f",
  "name" : "shouldConnectToNetwork()",
  "fullName" : "org.neonlabs.compatibility.ConnectionKtTest.shouldConnectToNetwork",
  "historyId" : "954d7a21b77cb5257173fc2ecd971b33",
  "time" : {
    "start" : 1636030104773,
    "stop" : 1636030105366,
    "duration" : 593
  },
  "description" : "Connection",
  "descriptionHtml" : "<p>Connection</p>\n",
  "status" : "failed",
  "statusMessage" : "expected: not <null>",
  "statusTrace" : "org.opentest4j.AssertionFailedError: expected: not <null>\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39)\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:134)\n\tat org.junit.jupiter.api.AssertNotNull.failNull(AssertNotNull.java:47)\n\tat org.junit.jupiter.api.AssertNotNull.assertNotNull(AssertNotNull.java:36)\n\tat org.junit.jupiter.api.AssertNotNull.assertNotNull(AssertNotNull.java:31)\n\tat org.junit.jupiter.api.Assertions.assertNotNull(Assertions.java:300)\n\tat org.neonlabs.compatibility.ConnectionKtTest.shouldConnectToNetwork(ConnectionKtTest.kt:27)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:129)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:185)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:295)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "junit.platform.uniqueid",
    "value" : "[engine:junit-jupiter]/[class:org.neonlabs.compatibility.ConnectionKtTest]/[method:shouldConnectToNetwork()]"
  }, {
    "name" : "feature",
    "value" : "KEthereum"
  }, {
    "name" : "epic",
    "value" : "Kotlin frameworks"
  }, {
    "name" : "story",
    "value" : "Connection"
  }, {
    "name" : "host",
    "value" : "fv-az39-661"
  }, {
    "name" : "thread",
    "value" : "3608@fv-az39-661.ForkJoinPool-1-worker-3(17)"
  }, {
    "name" : "framework",
    "value" : "junit-platform"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "package",
    "value" : "org.neonlabs.compatibility.ConnectionKtTest"
  }, {
    "name" : "testClass",
    "value" : "org.neonlabs.compatibility.ConnectionKtTest"
  }, {
    "name" : "testMethod",
    "value" : "shouldConnectToNetwork"
  }, {
    "name" : "suite",
    "value" : "org.neonlabs.compatibility.ConnectionKtTest"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 18,
        "unknown" : 0,
        "total" : 20
      },
      "items" : [ {
        "uid" : "e2121328faf1a606",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/23//#testresult/e2121328faf1a606",
        "status" : "passed",
        "time" : {
          "start" : 1636011492758,
          "stop" : 1636011493296,
          "duration" : 538
        }
      }, {
        "uid" : "7a3523736adcfa94",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/22//#testresult/7a3523736adcfa94",
        "status" : "passed",
        "time" : {
          "start" : 1636008755313,
          "stop" : 1636008755956,
          "duration" : 643
        }
      }, {
        "uid" : "6b3db77620748a36",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/21//#testresult/6b3db77620748a36",
        "status" : "passed",
        "time" : {
          "start" : 1635939006067,
          "stop" : 1635939006566,
          "duration" : 499
        }
      }, {
        "uid" : "613c57048bee40d3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/20//#testresult/613c57048bee40d3",
        "status" : "passed",
        "time" : {
          "start" : 1635935175694,
          "stop" : 1635935176197,
          "duration" : 503
        }
      }, {
        "uid" : "c076c52cb8743a53",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/19//#testresult/c076c52cb8743a53",
        "status" : "passed",
        "time" : {
          "start" : 1635935433402,
          "stop" : 1635935434465,
          "duration" : 1063
        }
      }, {
        "uid" : "dcd009614b9c8c92",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/18//#testresult/dcd009614b9c8c92",
        "status" : "passed",
        "time" : {
          "start" : 1635855511976,
          "stop" : 1635855512366,
          "duration" : 390
        }
      }, {
        "uid" : "e75c53d2b87031a4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/17//#testresult/e75c53d2b87031a4",
        "status" : "passed",
        "time" : {
          "start" : 1635855413701,
          "stop" : 1635855414171,
          "duration" : 470
        }
      }, {
        "uid" : "2fada649927c3468",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/16//#testresult/2fada649927c3468",
        "status" : "passed",
        "time" : {
          "start" : 1635855282945,
          "stop" : 1635855283388,
          "duration" : 443
        }
      }, {
        "uid" : "e7b13b2724aaeb78",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/15//#testresult/e7b13b2724aaeb78",
        "status" : "passed",
        "time" : {
          "start" : 1635847839512,
          "stop" : 1635847839906,
          "duration" : 394
        }
      }, {
        "uid" : "78fc5936fd8f29ee",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/14//#testresult/78fc5936fd8f29ee",
        "status" : "passed",
        "time" : {
          "start" : 1635847665249,
          "stop" : 1635847665607,
          "duration" : 358
        }
      }, {
        "uid" : "6dcc80e32608c620",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/13//#testresult/6dcc80e32608c620",
        "status" : "passed",
        "time" : {
          "start" : 1635837005755,
          "stop" : 1635837006497,
          "duration" : 742
        }
      }, {
        "uid" : "492368255901b4d1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/12//#testresult/492368255901b4d1",
        "status" : "passed",
        "time" : {
          "start" : 1635835861176,
          "stop" : 1635835861625,
          "duration" : 449
        }
      }, {
        "uid" : "86a28f6690daf435",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/11//#testresult/86a28f6690daf435",
        "status" : "passed",
        "time" : {
          "start" : 1635833840192,
          "stop" : 1635833840753,
          "duration" : 561
        }
      }, {
        "uid" : "a2abfecdf40badd4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/10//#testresult/a2abfecdf40badd4",
        "status" : "passed",
        "time" : {
          "start" : 1635784937298,
          "stop" : 1635784937786,
          "duration" : 488
        }
      }, {
        "uid" : "8591e92f0505a868",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/9//#testresult/8591e92f0505a868",
        "status" : "passed",
        "time" : {
          "start" : 1635782416762,
          "stop" : 1635782417370,
          "duration" : 608
        }
      }, {
        "uid" : "27df3310366657c3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/518//#testresult/27df3310366657c3",
        "status" : "passed",
        "time" : {
          "start" : 1635754134662,
          "stop" : 1635754135344,
          "duration" : 682
        }
      }, {
        "uid" : "53321d011dc0200f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/8//#testresult/53321d011dc0200f",
        "status" : "failed",
        "statusDetails" : "expected: not <null>",
        "time" : {
          "start" : 1635588260634,
          "stop" : 1635588261367,
          "duration" : 733
        }
      }, {
        "uid" : "7103c55b253b3e49",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/7//#testresult/7103c55b253b3e49",
        "status" : "passed",
        "time" : {
          "start" : 1635554721563,
          "stop" : 1635554722021,
          "duration" : 458
        }
      }, {
        "uid" : "296cffee7afabb6e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/6//#testresult/296cffee7afabb6e",
        "status" : "passed",
        "time" : {
          "start" : 1635551039222,
          "stop" : 1635551039879,
          "duration" : 657
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ddeac2db1127771f.json",
  "parameterValues" : [ ]
}