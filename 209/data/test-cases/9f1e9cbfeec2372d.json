{
  "uid" : "9f1e9cbfeec2372d",
  "name" : "test_transfer_event_fires",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_transfer_event_fires",
  "historyId" : "928ffb81b12f37ad66f1eb91299aed9a",
  "time" : {
    "start" : 1643166744945,
    "stop" : 1643166777140,
    "duration" : 32195
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7ff7f9a434f0>\ntoken = <Token Contract '0xe0902E8874b228E3581BC15d58C715E5205E855B'>\n\n    def test_transfer_event_fires(accounts, token):\n        amount = token.balanceOf(accounts[0])\n    \n>       token.approve(accounts[1], amount, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transferFrom.py:160: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...valid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 36, trx 35']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 36, trx 35']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1643166455412,
      "stop" : 1643166455412,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1643166456684,
      "stop" : 1643166470919,
      "duration" : 14235
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1643166474725,
      "stop" : 1643166474725,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1643166474725,
      "stop" : 1643166474963,
      "duration" : 238
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1643166522162,
      "stop" : 1643166525023,
      "duration" : 2861
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1643166902811,
      "stop" : 1643166902811,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az132-61"
  }, {
    "name" : "thread",
    "value" : "3556-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 6,
        "skipped" : 0,
        "passed" : 29,
        "unknown" : 0,
        "total" : 35
      },
      "items" : [ {
        "uid" : "b4b75a030fec2ef9",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/198//#testresult/b4b75a030fec2ef9",
        "status" : "passed",
        "time" : {
          "start" : 1642724055182,
          "stop" : 1642724059278,
          "duration" : 4096
        }
      }, {
        "uid" : "f40d76418ca4e5aa",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/197//#testresult/f40d76418ca4e5aa",
        "status" : "passed",
        "time" : {
          "start" : 1642648163123,
          "stop" : 1642648165902,
          "duration" : 2779
        }
      }, {
        "uid" : "7d70040c64213aae",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/194//#testresult/7d70040c64213aae",
        "status" : "passed",
        "time" : {
          "start" : 1642551345438,
          "stop" : 1642551349519,
          "duration" : 4081
        }
      }, {
        "uid" : "6647025be8eaf42f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/195//#testresult/6647025be8eaf42f",
        "status" : "passed",
        "time" : {
          "start" : 1642561838685,
          "stop" : 1642561842690,
          "duration" : 4005
        }
      }, {
        "uid" : "e45d74ec37e43d36",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/192//#testresult/e45d74ec37e43d36",
        "status" : "broken",
        "statusDetails" : "ValueError: there is no unique or exclusion constraint matching the ON CONFLICT specification",
        "time" : {
          "start" : 1642464828693,
          "stop" : 1642464828693,
          "duration" : 0
        }
      }, {
        "uid" : "af9fd37c7fc9adcf",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/190//#testresult/af9fd37c7fc9adcf",
        "status" : "broken",
        "statusDetails" : "web3.exceptions.BlockNotFound: Block with id: 'latest' not found.",
        "time" : {
          "start" : 1642378419997,
          "stop" : 1642378419997,
          "duration" : 0
        }
      }, {
        "uid" : "50ad3728d312693c",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/188//#testresult/50ad3728d312693c",
        "status" : "passed",
        "time" : {
          "start" : 1642292133722,
          "stop" : 1642292136240,
          "duration" : 2518
        }
      }, {
        "uid" : "a86571ddddc0bbe6",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/187//#testresult/a86571ddddc0bbe6",
        "status" : "passed",
        "time" : {
          "start" : 1642216261374,
          "stop" : 1642216263872,
          "duration" : 2498
        }
      }, {
        "uid" : "3ea86335240060a8",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/184//#testresult/3ea86335240060a8",
        "status" : "passed",
        "time" : {
          "start" : 1642119348755,
          "stop" : 1642119351656,
          "duration" : 2901
        }
      }, {
        "uid" : "4aa9b651548a46e0",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/182//#testresult/4aa9b651548a46e0",
        "status" : "passed",
        "time" : {
          "start" : 1642032997387,
          "stop" : 1642033000749,
          "duration" : 3362
        }
      }, {
        "uid" : "97d6e32c6d00145a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/181//#testresult/97d6e32c6d00145a",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641957690172,
          "stop" : 1641957690172,
          "duration" : 0
        }
      }, {
        "uid" : "32f8923a328ea34",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/179//#testresult/32f8923a328ea34",
        "status" : "passed",
        "time" : {
          "start" : 1641870670134,
          "stop" : 1641870673407,
          "duration" : 3273
        }
      }, {
        "uid" : "39b75816c9cff797",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/177//#testresult/39b75816c9cff797",
        "status" : "passed",
        "time" : {
          "start" : 1641784285193,
          "stop" : 1641784288117,
          "duration" : 2924
        }
      }, {
        "uid" : "4fc5ca94fffc2c29",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/174//#testresult/4fc5ca94fffc2c29",
        "status" : "passed",
        "time" : {
          "start" : 1641687403524,
          "stop" : 1641687406392,
          "duration" : 2868
        }
      }, {
        "uid" : "4b14f84fe21bbad7",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/172//#testresult/4b14f84fe21bbad7",
        "status" : "passed",
        "time" : {
          "start" : 1641601030208,
          "stop" : 1641601034301,
          "duration" : 4093
        }
      }, {
        "uid" : "b7b8d872b251f83a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/170//#testresult/b7b8d872b251f83a",
        "status" : "passed",
        "time" : {
          "start" : 1641514528584,
          "stop" : 1641514531477,
          "duration" : 2893
        }
      }, {
        "uid" : "f5e5e55e917ee5a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/168//#testresult/f5e5e55e917ee5a",
        "status" : "passed",
        "time" : {
          "start" : 1641428201466,
          "stop" : 1641428205735,
          "duration" : 4269
        }
      }, {
        "uid" : "7366061afb8f72a5",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/167//#testresult/7366061afb8f72a5",
        "status" : "passed",
        "time" : {
          "start" : 1641352345311,
          "stop" : 1641352349349,
          "duration" : 4038
        }
      }, {
        "uid" : "daa79740fb8cb96f",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/165//#testresult/daa79740fb8cb96f",
        "status" : "passed",
        "time" : {
          "start" : 1641265844395,
          "stop" : 1641265848422,
          "duration" : 4027
        }
      }, {
        "uid" : "6adc839b3519ef06",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/163//#testresult/6adc839b3519ef06",
        "status" : "passed",
        "time" : {
          "start" : 1641179414585,
          "stop" : 1641179418145,
          "duration" : 3560
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9f1e9cbfeec2372d.json",
  "parameterValues" : [ ]
}