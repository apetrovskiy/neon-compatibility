{
  "uid" : "70ee356d916e6082",
  "name" : "transfers the requested amount",
  "fullName" : "Contract: ERC20 erc20 behaviour transfer when the recipient is not the zero address when the sender transfers zero tokens.transfers the requested amount",
  "historyId" : "b9749022e6bb001b48ebf3f27bb41b3c",
  "time" : {
    "start" : 1637701629641,
    "stop" : 1637701739871,
    "duration" : 110230
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "HH110: Invalid JSON-RPC response received: <html>\n                <head><title>500 Internal Server Error</title></head>\n                <body>\n                <center><h1>500 Internal Server Error</h1></center>\n                <hr><center>nginx/1.18.0 (Ubuntu)</center>\n                </body>\n                </html>\n                ",
  "statusTrace" : "HardhatError: HH110: Invalid JSON-RPC response received: <html>\n                    at Context.<anonymous> (test/token/ERC20/ERC20.behavior.js:204:33)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "suite",
    "value" : "Contract: ERC20 erc20 behaviour transfer when the recipient is not the zero address when the sender transfers zero tokens"
  }, {
    "name" : "testClass",
    "value" : "Contract: ERC20 erc20 behaviour transfer when the recipient is not the zero address when the sender transfers zero tokens"
  }, {
    "name" : "testMethod",
    "value" : "transfers the requested amount"
  }, {
    "name" : "package",
    "value" : "Contract: ERC20 erc20 behaviour transfer when the recipient is not the zero address when the sender transfers zero tokens"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Connection problem",
      "messageRegex" : ".*Error: ETIMEDOUT.*|.*ESOCKETTIMEDOUT.*|.*ECONNRESET.*|.*Client network socket disconnected before secure TLS connection was established.*|.*500 Internal Server Error.*nginx.*|.*Error: socket hang up.*",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "dbfbc349e203d79a",
        "reportUrl" : "https://apetrovskiy.github.io/neon-compatibility/22//#testresult/dbfbc349e203d79a",
        "status" : "passed",
        "time" : {
          "start" : 1637668175940,
          "stop" : 1637668199964,
          "duration" : 24024
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "70ee356d916e6082.json",
  "parameterValues" : [ ]
}